import matrix from "../../npm-matrix/matrix.js";

export default class DropOut{
    mode = "train"
    id = undefined;
    suffleIndexArray = [];
    indexArrayLength = 0;  
    indexArraySufflePartLength = 0;
    constructor(dropOutRate=.5){
        this.dropOutRate = dropOutRate;
        this.init();
        

    }

    init(){
        if(this.dropOutRate < 0 && this.dropOutRate >= 1 ) throw new Error("Dropout Rate must be Number bitWeen 0 and .9 .defalut rate is 0.5"); 
    }

    forword(inputs){
        this.inputs = inputs;
        if(this.mode == "train"){
            this.inputs_flatted = this.inputs.flat();

            if(this.suffleIndexArray.length == 0 ){
                const onesCount = Number.parseInt(this.inputs_flatted.length * this.dropOutRate )
                this.inputs_flatted.forEach((_,index) => {
                    if( index < onesCount) this.suffleIndexArray.push(1)
                    else this.suffleIndexArray.push(0);
                    return;
                });
                const pushingIndex = this.id % this.suffleIndexArray.length ;
                const removedBit = this.suffleIndexArray.splice(0,1)[0];
                this.suffleIndexArray.splice(pushingIndex , 0 , removedBit);
                this.indexArrayLength = this.suffleIndexArray.length;
                this.indexArraySufflePartLength = Math.round(this.indexArrayLength / 3 );
            }
            
            this.#suffle();
            this.inputs = matrix.matmul(this.inputs , [this.suffleIndexArray]);
        }
        this.output = this.inputs;
    }

    backword(dvalues){
        this.input_dvalues = dvalues;
        this.dinputs = this.input_dvalues;

    }

    #suffle(){
        const sufflePart = this.suffleIndexArray.splice(this.indexArraySufflePartLength , this.indexArraySufflePartLength);
        this.suffleIndexArray.push(sufflePart);
        this.suffleIndexArray = this.suffleIndexArray.flat();
        
    }
}